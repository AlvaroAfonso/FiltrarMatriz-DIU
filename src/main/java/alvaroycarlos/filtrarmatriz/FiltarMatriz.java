/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alvaroycarlos.filtrarmatriz;

import java.util.Random;

/**
 *
 * @author alvaroafonsolopez
 */
public class FiltarMatriz extends javax.swing.JFrame {

    private int matrix[][] = new int[10][10];
    
    /**
     * Creates new form FiltarMatriz
     */
    public FiltarMatriz() {
        initComponents();
        
        setLocationRelativeTo(null);
        
        slider.setMajorTickSpacing(10);
        slider.setMinorTickSpacing(2);
        slider.setPaintLabels(true);
        slider.setPaintTicks(true);
        randMatrix();
        slider.setValue(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InsertData = new javax.swing.JPanel();
        minimumLabel = new javax.swing.JLabel();
        maximumLabel = new javax.swing.JLabel();
        fieldMinimum = new javax.swing.JTextField();
        fieldMaximum = new javax.swing.JTextField();
        errorMsg = new javax.swing.JLabel();
        ShowData = new javax.swing.JPanel();
        dataPane = new javax.swing.JScrollPane();
        dataText = new javax.swing.JTextArea();
        slider = new javax.swing.JSlider();
        title = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        InsertData.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        minimumLabel.setText("Mínimo:");

        maximumLabel.setText("Máximo:");

        fieldMinimum.setText("Enter para confirmar");
        fieldMinimum.setToolTipText("Pulsar enter para confirmar");
        fieldMinimum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldMinimumFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldMinimumFocusLost(evt);
            }
        });
        fieldMinimum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldMinimumMouseClicked(evt);
            }
        });
        fieldMinimum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldMinimumActionPerformed(evt);
            }
        });

        fieldMaximum.setText("Enter para confirmar");
        fieldMaximum.setToolTipText("Pulsar enter para confirmar");
        fieldMaximum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldMaximumFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldMaximumFocusLost(evt);
            }
        });
        fieldMaximum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldMaximumMouseClicked(evt);
            }
        });
        fieldMaximum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldMaximumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InsertDataLayout = new javax.swing.GroupLayout(InsertData);
        InsertData.setLayout(InsertDataLayout);
        InsertDataLayout.setHorizontalGroup(
            InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertDataLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(InsertDataLayout.createSequentialGroup()
                        .addComponent(maximumLabel)
                        .addGap(9, 9, 9)
                        .addComponent(fieldMaximum, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                    .addGroup(InsertDataLayout.createSequentialGroup()
                        .addComponent(minimumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldMinimum)))
                .addContainerGap())
        );
        InsertDataLayout.setVerticalGroup(
            InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertDataLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minimumLabel)
                    .addComponent(fieldMinimum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maximumLabel)
                    .addComponent(fieldMaximum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        ShowData.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        dataText.setEditable(false);
        dataText.setColumns(20);
        dataText.setRows(5);
        dataPane.setViewportView(dataText);

        javax.swing.GroupLayout ShowDataLayout = new javax.swing.GroupLayout(ShowData);
        ShowData.setLayout(ShowDataLayout);
        ShowDataLayout.setHorizontalGroup(
            ShowDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataPane)
                .addContainerGap())
        );
        ShowDataLayout.setVerticalGroup(
            ShowDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataPane, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );

        slider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        title.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        title.setText("Filtrar matriz");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(title))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(InsertData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(ShowData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addComponent(slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(title)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(ShowData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(InsertData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldMinimumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldMinimumActionPerformed
        //System.out.println("Prueba min");
        
        String minText = fieldMinimum.getText();
        
        int def = slider.getMinimum();
        
        int min = numeric("min", minText);
        
        if(def != min){
            if(min < slider.getMaximum()){
                slider.setMinimum(min);
        
                randMatrix();
            }else{
                errorMsg.setText("Error: mínimo >= máximo");
            }
        }
        fieldMinimum.setText("Enter para confirmar");
    }//GEN-LAST:event_fieldMinimumActionPerformed

    private void fieldMaximumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldMaximumActionPerformed
        //System.out.println("Prueba max");
        
        String maxText = fieldMaximum.getText();
        
        int def = slider.getMaximum();
        
        int max = numeric("max",maxText);
        
        if(def != max){
            
            if(max > slider.getMinimum()){
                slider.setMaximum(max);
        
                randMatrix();
            }else{
                errorMsg.setText("Error: máximo <= mínimo");
            }
        }
        fieldMaximum.setText("Enter para confirmar");
    }//GEN-LAST:event_fieldMaximumActionPerformed

    private void randMatrix(){
        Random rand = new Random();
        for(int i=0;i<10;i++){
            for(int j=0;j<10;j++){
                int random = rand.nextInt(slider.getMaximum() - slider.getMinimum() + 1) + slider.getMinimum();
                matrix[i][j]= random;
                //System.out.print(matrix[i][j]);
            }
            //System.out.println();
        }
        showMatrix(slider.getValue());
    }
    
    private void showMatrix(int edge){
        dataText.setText("");
        for (int i = 0; i < 10; i++){
            for (int j = 0; j < 10; j++){
                if(matrix[i][j] > edge){
                    dataText.append(matrix[i][j] + " ");
                }else{
                    dataText.append(" - ");
                }
                
            }
            dataText.append("\n");
        }
        //System.out.println(slider.getMinimum());
        //System.out.println(slider.getMaximum());
    }
    
    private int numeric (String option, String value) throws NumberFormatException {
        
        int num = 0;
        
        if(option.equals("max")){
            num = slider.getMaximum();
        }else{
            num = slider.getMinimum();
        }
        
        //boolean fail = false;
        try{
            num = Integer.parseInt(value);
            errorMsg.setText("");
        }catch (NumberFormatException e){
            if(option.equals("max")){
                errorMsg.setText("Error, máximo no numérico");
            }else{
                errorMsg.setText("Error, mínimo no numérico");
            }
            
            //fail = true;
        }
        
        return num;
    }
    
    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        //System.out.println(slider.getValue());
        //System.out.println(matrix[5][6]);
        //showMatrix();
        showMatrix(slider.getValue());
    }//GEN-LAST:event_sliderStateChanged

    private void fieldMinimumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldMinimumMouseClicked
        // TODO add your handling code here:
        //fieldMinimum.setText("");
    }//GEN-LAST:event_fieldMinimumMouseClicked

    private void fieldMaximumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldMaximumMouseClicked
        // TODO add your handling code here:
        fieldMaximum.setText("");
    }//GEN-LAST:event_fieldMaximumMouseClicked

    private void fieldMinimumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldMinimumFocusLost
        // TODO add your handling code here:
        fieldMinimum.setText("Enter para confirmar");
    }//GEN-LAST:event_fieldMinimumFocusLost

    private void fieldMinimumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldMinimumFocusGained
        // TODO add your handling code here:
        fieldMinimum.setText("");
    }//GEN-LAST:event_fieldMinimumFocusGained

    private void fieldMaximumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldMaximumFocusGained
        // TODO add your handling code here:
        fieldMaximum.setText("");
    }//GEN-LAST:event_fieldMaximumFocusGained

    private void fieldMaximumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldMaximumFocusLost
        // TODO add your handling code here:
        fieldMaximum.setText("Enter para confirmar");
    }//GEN-LAST:event_fieldMaximumFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FiltarMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FiltarMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FiltarMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FiltarMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FiltarMatriz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InsertData;
    private javax.swing.JPanel ShowData;
    private javax.swing.JScrollPane dataPane;
    private javax.swing.JTextArea dataText;
    private javax.swing.JLabel errorMsg;
    private javax.swing.JTextField fieldMaximum;
    private javax.swing.JTextField fieldMinimum;
    private javax.swing.JLabel maximumLabel;
    private javax.swing.JLabel minimumLabel;
    private javax.swing.JSlider slider;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
